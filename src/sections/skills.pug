//- mixin skills(className, items, percent)
  div(class=`skills__${className}`)
    h3(class='skills__title')=`${className}`
    ul(class='skills__list')
      each item, ndx in items
        li(class=`skills__item skills__item-${item}`)
          svg(class="skill__svg" viewBox='0 0 140 140' preverseAspectRation="none")
            linearGradient#linear-gradient
              stop(offset="0%" stop-color="#5500f2")
              stop(offset="100%" stop-color="#ad00ed")
            circle(cx='70' cy='70' r='60' class='skill__circle')
            circle(cx='70' cy='70' r='60' class='skill__circle skill__circle-gradient' style=`animation-delay: ${percent[ndx]}`)
          span.skills__item-text=item

script(type="text/x-template")#skills-list
  ul.skills
    li.skills__item(v-for="skill in skills")
      row(
        :skill="skill"
      )

script(type="text/x-template")#skills-row
  .skills-row
    .skills-row__title {{skill.skillsGroup}}
    ul.skills-row__list
      li.skills-row__item(v-for="(skillPercent, skillName) in skill.skills")
        skill(
          :skillName="skillName",
          :skillPercent="skillPercent"
        )

script(type="text/x-template")#skill
  .skill
    svg(viewBox="0 0 100 100").skill__circle-shape
      circle(cx="50" cy="50" r="40").skill__circle.skill__circle_under
      circle(cx="50" cy="50" r="40" ref="circle" stroke="url(#gradient)" transform='rotate(180 50 50)').skill__circle.skill__circle_above
      linearGradient(id="gradient" x1="0%" y1="0%" x2="100%" y2="0")
        stop(offset="0%" stop-color="#5500f2")
        stop(offset="100%" stop-color="#8f00ef")
    .skill__circle-text {{skillName}}